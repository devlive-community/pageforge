(()=>{var h={formatNumber(t){return t>=1e6?(t/1e6).toFixed(1)+"m":t>=1e3?(t/1e3).toFixed(1)+"k":t.toString()},showLoading(){let t=`
            <div class="stats-loading">
                <div class="tag-container">
                    <div class="skeleton-loader"></div>
                </div>
                <div class="stars-container">
                    <div class="skeleton-loader"></div>
                </div>
                <div class="forks-container">
                    <div class="skeleton-loader"></div>
                </div>
            </div>
        `,a=document.createElement("style");a.textContent=`
            .skeleton-loader {
                width: 60px;
                height: 16px;
                background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
                background-size: 200% 100%;
                animation: loading 1.5s infinite;
                border-radius: 4px;
            }
            @keyframes loading {
                0% { background-position: 200% 0; }
                100% { background-position: -200% 0; }
            }
        `,document.head.appendChild(a),[".tag-container",".stars-container",".forks-container"].forEach(e=>{document.querySelectorAll(e).forEach(o=>{o.innerHTML='<div class="skeleton-loader"></div>'})})},async fetchStats(t,a){var l;let e=`github-stats-${t}-${a}`,r=localStorage.getItem(e),o=localStorage.getItem(`${e}-time`);if(this.showLoading(),r&&o&&Date.now()-parseInt(o)<36e5){let s=JSON.parse(r);return this.updateUI(s),s}let c={Accept:"application/vnd.github.v3+json","User-Agent":"PageForge-Docs"};try{let[s,n]=await Promise.all([fetch(`https://api.github.com/repos/${t}/${a}`,{headers:c}),fetch(`https://api.github.com/repos/${t}/${a}/tags`,{headers:c})]);if(!s.ok||!n.ok)throw new Error("GitHub API request failed");let d=await s.json(),g=await n.json(),i={stars:this.formatNumber(d.stargazers_count||0),forks:this.formatNumber(d.forks_count||0),tag:((l=g[0])==null?void 0:l.name)||"-"};return localStorage.setItem(e,JSON.stringify(i)),localStorage.setItem(`${e}-time`,Date.now().toString()),this.updateUI(i),i}catch(s){console.error("\u{1F92F} \u83B7\u53D6 GitHub Stats \u5931\u8D25",s);let n={stars:"-",forks:"-",tag:"-"};return this.updateUI(n),n}},updateUI(t){if(!t)return;let a=document.querySelectorAll(".tag-container"),e=document.querySelectorAll(".stars-container"),r=document.querySelectorAll(".forks-container");a.forEach(o=>{o.innerHTML=`
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16" fill="currentColor">
            <path d="M1 7.775V2.75C1 1.784 1.784 1 2.75 1h5.025c.464 0 .91.184 1.238.513l6.25 6.25a1.75 1.75 0 0 1 0 2.474l-5.026 5.026a1.75 1.75 0 0 1-2.474 0l-6.25-6.25A1.75 1.75 0 0 1 1 7.775Zm1.5 0c0 .066.026.13.073.177l6.25 6.25a.25.25 0 0 0 .354 0l5.025-5.025a.25.25 0 0 0 0-.354l-6.25-6.25a.25.25 0 0 0-.177-.073H2.75a.25.25 0 0 0-.25.25ZM6 5a1 1 0 1 1 0 2 1 1 0 0 1 0-2Z"></path>
        </svg>
        ${t.tag}`}),e.forEach(o=>{o.innerHTML=`
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16" fill="currentColor">
            <path d="M8 .25a.75.75 0 0 1 .673.418l1.882 3.815 4.21.612a.75.75 0 0 1 .416 1.279l-3.046 2.97.719 4.192a.751.751 0 0 1-1.088.791L8 12.347l-3.766 1.98a.75.75 0 0 1-1.088-.79l.72-4.194L.818 6.374a.75.75 0 0 1 .416-1.28l4.21-.611L7.327.668A.75.75 0 0 1 8 .25Z"/>
        </svg>
        ${t.stars}`}),r.forEach(o=>{o.innerHTML=`
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 16 16" width="16" height="16" fill="currentColor">
            <path d="M5 5.372v.878c0 .414.336.75.75.75h4.5a.75.75 0 0 0 .75-.75v-.878a2.25 2.25 0 1 1 1.5 0v.878a2.25 2.25 0 0 1-2.25 2.25h-1.5v2.128a2.251 2.251 0 1 1-1.5 0V8.5h-1.5A2.25 2.25 0 0 1 3.5 6.25v-.878a2.25 2.25 0 1 1 1.5 0ZM5 3.25a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Zm6.75.75a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Zm-3 8.75a.75.75 0 1 0-1.5 0 .75.75 0 0 0 1.5 0Z"/>
        </svg>
        ${t.forks}`})},init(t,a){if(!t||!a)return;this.showLoading();let e=async()=>{await this.fetchStats(t,a)};e(),setInterval(e,36e5)}};window.PageForge=window.PageForge||{};window.PageForge.GitHubStats=h;})();
